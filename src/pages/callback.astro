---
const { url, cookies, redirect } = Astro;

// Obtener el código de autorización de la URL
const code = url.searchParams.get('code');
const error = url.searchParams.get('error');
const errorDescription = url.searchParams.get('error_description');

// Si hay un error en la autenticación
if (error) {
  console.error('Error en OAuth callback:', errorDescription);
  return redirect('/login?error=' + encodeURIComponent(errorDescription || 'Authentication failed'));
}

// Si no hay código, redirigir a login
if (!code) {
  return redirect('/login');
}

// Importar supabase del lado del servidor
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

try {
  // Intercambiar el código por una sesión
  const { data, error: exchangeError } = await supabase.auth.exchangeCodeForSession(code);
  
  if (exchangeError) {
    console.error('Error intercambiando código por sesión:', exchangeError);
    return redirect('/login?error=' + encodeURIComponent(exchangeError.message));
  }

  if (data.session) {
    // Establecer las cookies de sesión
    cookies.set('sb-access-token', data.session.access_token, {
      path: '/',
      secure: true,
      httpOnly: true,
      sameSite: 'lax',
      maxAge: 60 * 60 * 24 * 7, // 7 días
    });
    
    cookies.set('sb-refresh-token', data.session.refresh_token, {
      path: '/',
      secure: true,
      httpOnly: true,
      sameSite: 'lax',
      maxAge: 60 * 60 * 24 * 30, // 30 días
    });

    // Aquí podrías hacer lógica extra, ej: registrar el usuario en tu DB
    // await saveUser(data.session.user)

    // Redirigir al dashboard
    return redirect('/dashboard');
  }
} catch (err) {
  console.error('Error procesando callback:', err);
  return redirect('/login?error=callback_failed');
}

// Si llegamos aquí, algo salió mal
return redirect('/login');
---
