---
import Product from "./Product.astro"
import ProductsContainer from "./ProductsContainer";
import { actions } from 'astro:actions';
import type { Product as ProductType } from '../../actions/products';

let products: ProductType[] = [];

let hasError = false;
let errorMessage = '';

const { data, error } = await Astro.callAction(actions.products.getProducts, {});

if (error) {
  hasError = true;
  
  // Manejar según el código de error
  switch (error.code) {
    case 'BAD_REQUEST':
      errorMessage = 'Error al conectar con la base de datos. Por favor, recarga la página.';
      break;
    case 'NOT_FOUND':
      errorMessage = 'No hay productos disponibles en este momento.';
      break;
    case 'INTERNAL_SERVER_ERROR':
      errorMessage = 'Ocurrió un error en el servidor. Por favor, intenta más tarde.';
      break;
    default:
      errorMessage = 'Ocurrió un error inesperado.';
  }
  console.error('Error de Action:', error.message);
} else {
  // Si no hay error, asignar los datos
  products = data || [];
}

// Filtrar productos por categoría
const cereales = hasError ? [] : products.filter(product => product.id_categoria === '922fb70d-3a54-48e5-91cf-effb9ab3d3cb');
const panes = hasError ? [] : products.filter(product => product.id_categoria === '23351604-a1b5-452b-8d7a-1e8db7395da1');
const soya = hasError ? [] : products.filter(product => product.id_categoria === 'cd369df6-7f77-408d-b84d-6abbdb60e781');
---

<section class="section-padding xl:p-20 2xl:px-56">
    {hasError && (
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
            <p>{errorMessage}</p>
        </div>
    )}

    <h1 class="section-title ml-4" id="Cereales">Cereales</h1>

    <div class="w-full flex flex-wrap justify-between sm:justify-start md:gap-20 mb-10">
        {
            cereales?.map((cereal) => ( 
                <Product
                    image={cereal.imagen_producto}
                    name={cereal.nombre_producto}
                    weight={cereal.peso_producto}
                    productId={cereal.id_producto}
                />
            ))
        }
    </div>

    <h1 class="section-title ml-4" id="Panes">Panes</h1>

    <div class="w-full flex flex-wrap justify-between sm:justify-start md:gap-22">
        {
            panes?.map((pan) => ( 
                <Product
                    image={pan.imagen_producto}
                    name={pan.nombre_producto}
                    weight={pan.peso_producto}
                    productId={pan.id_producto}
                />
            ))
        }
    </div>

    <h1 class="section-title ml-4 mt-8" id="Soya">Soya</h1>

    <div class="w-full flex flex-wrap justify-between sm:justify-start md:gap-22">
        {
            soya?.map((soya) => ( 
                <Product
                    image={soya.imagen_producto}
                    name={soya.nombre_producto}
                    weight={soya.peso_producto}
                    productId={soya.id_producto}
                />
            ))
        }
    </div> 

    <!-- Contenedor del Modal con Preact (client:load para interactividad) -->
    <ProductsContainer client:load products={products} />
</section>