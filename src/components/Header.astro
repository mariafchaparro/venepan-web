---
interface Props {
  classicHeader?: boolean;
  class?: string;
}

const { classicHeader = false, class: extraClass } = Astro.props;
const currentPath = Astro.url.pathname;
const menuIcon = classicHeader ? "/icons/menu.svg" : "/icons/menu-white.svg"

const navLinks = [
  { href: "/", text: "Inicio", icon: "home.svg" },
  { href: "/productos", text: "Productos", icon: "package.svg" },
  { href: "/nosotros", text: "Nosotros", icon: "users.svg" },
  { href: "/recetas", text: "Recetas", icon: "book-open.svg" }
];

// Conditional classes for desktop navbar
const navbarClasses = ["w-full flex items-center justify-between px-6 py-4 md:px-12 lg:px-28 xl:px-36"];
const homeLinkClasses = "text-gray-800 hover:text-primary hover:font-medium";
const otherLinkClasses = "text-white hover:bg-white/25";
const linkClasses = classicHeader ? homeLinkClasses : otherLinkClasses;

// Classes for the active link
const MobileLinkClasses = "block w-full px-4 py-3 cursor-pointer hover:bg-primary/5 hover:rounded-xl hover:font-semibold hover:text-primary"
const activeClassesDesktop = classicHeader ? "text-primary text-gray-800 font-medium" : "bg-white/25";
const activeClassesMobile = "bg-primary/5 rounded-xl font-semibold text-primary";
---

<header class:list={[navbarClasses, Astro.props.class]}>
    <a href="/" class="w-16 min-w-16 md:w-20">
        <img src="icons/logo.svg" alt="Venepan Logo" loading="eager"/>
    </a>

    <nav class="hidden md:flex">
        <ul class="flex gap-3 text-sm md:gap-2 lg:gap-6 xl:gap-7">
            {navLinks.map(link => {
                // Check if the current link is active
                const isActive = currentPath === link.href;
                return (
                    <li>
                        <a 
                            href={link.href} 
                            class:list={[
                                "px-3 py-2 rounded-2xl", 
                                linkClasses,
                                isActive && activeClassesDesktop // Apply active classes if the link is active
                            ]}
                        >
                            {link.text}
                        </a>
                    </li>
                )
            })}
        </ul>
    </nav>

    <div class="hidden md:flex gap-2 items-center">
        <a href="/login" class:list={["text-sm font-semibold", classicHeader? "text-primary" : "text-white"]}>Login</a>
        <hr class:list={["rotate-90 w-3 h-0.5", classicHeader? "text-gray-700" : "text-white"]}/>
        <button class="btn text-sm hidden md:flex">Contáctanos</button>
    </div>
    
    <button 
        class="menu-button md:hidden cursor-pointer z-50" 
        data-menu-button aria-controls="mobile-menu" aria-expanded="false" >

        <img src={menuIcon} alt="Abrir menu" class="w-5 h-5">
    </button>
</header>

<div 
    id="mobile-menu"
    data-menu-container class="fixed inset-0 z-40 md:hidden pointer-events-none" >
    <div 
        data-menu-backdrop 
        class="fixed inset-0 bg-gray-700/45 transition-opacity duration-300 ease-in-out opacity-0"
    ></div>

    <div 
        data-menu-content
        class="bg-white border-r-1 border-gray-200 py-4 px-6 flex flex-col fixed top-0 left-0 w-5/6 min-w-60 max-w-sm h-screen z-50 transition-transform duration-300 ease-in-out transform -translate-x-full" >
        <div class="flex items-center justify-between w-full mb-14">
            <a href="/" class="w-16">
                <img src="/icons/logo.svg" alt="Venepan Logo"/>
            </a>

            <button 
            data-close-menu-button
            class="cursor-pointer">
                <img src="/icons/x.svg" alt="Cerrar menú">
            </button>
            
        </div>

        <nav class="flex flex-col justify-between w-full h-full">
            <ul class="flex flex-col gap-3 text-sm w-full">
                {navLinks.map(link => {
                    const isActive = currentPath === link.href;
                    return (
                        <li class="w-full">
                            <a 
                                href={link.href}
                                class:list={[ "flex items-center text-gray-800",
                                    MobileLinkClasses,
                                    isActive && activeClassesMobile 
                                ]}
                            >
                                
                                <img src={`/icons/${link.icon}`} alt={`${link.text} icon`} class="inline w-4 mr-4" />
                                {link.text}
                            </a>
                        </li>
                    )
                })}
            </ul>
    
            <div class="w-full flex flex-col gap-4 mt-8">
                <button class="btn text-sm w-fill">Contáctanos</button>
                <a href="/login" class="text-primary text-sm font-semibold self-center">Login</a>
                <p class="text-sm text-gray-500 self-center">Copyright © Alimentos Venepan</p>
            </div>
        </nav>
    </div>
</div>

<script>
    const menuButton = document.querySelector('[data-menu-button]');
    const menuContainer = document.querySelector('[data-menu-container]');
    const menuBackdrop = document.querySelector('[data-menu-backdrop]');
    const menuContent = document.querySelector('[data-menu-content]');
    const closeMenuButton = document.querySelector('[data-close-menu-button]');

    function toggleMenu() {
        const isExpanded = menuButton?.getAttribute('aria-expanded') === 'true';

        // Sets ARIA
        menuButton?.setAttribute('aria-expanded', String(!isExpanded));

        // Toggl clickable state
        menuContainer?.classList.toggle('pointer-events-none');
        
        // Backdrop animation (fade in/out)
        menuBackdrop?.classList.toggle('opacity-0');
        
        // Menu animation (slide in/out)
        menuContent?.classList.toggle('-translate-x-full');

        document.body.classList.toggle('overflow-hidden');
    }

    // Open and close menu
    menuButton?.addEventListener('click', toggleMenu);
    closeMenuButton?.addEventListener('click', toggleMenu);
    menuBackdrop?.addEventListener('click', toggleMenu);
</script>